spring:
  application:
    name: textile-tryon-backend
  
  # Database Configuration (Using H2 for development)
  datasource:
    url: ${DB_URL:jdbc:h2:mem:testdb}
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:}
    driver-class-name: org.h2.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Multipart Configuration for File Uploads
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
      enabled: true
  
  # Session Configuration
  session:
    store-type: none
    timeout: 3600

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# AWS Configuration
aws:
  access-key: ${AWS_ACCESS_KEY:your_access_key}
  secret-key: ${AWS_SECRET_KEY:your_secret_key}
  region: ${AWS_REGION:us-east-1}
  s3:
    bucket-name: ${AWS_BUCKET_NAME:textile-images}
    base-url: https://${aws.s3.bucket-name}.s3.${aws.region}.amazonaws.com

# AI API Configuration
ai:
  flux:
    api-key: ${FLUX_API_KEY:your_flux_api_key}
    api-url: ${FLUX_API_URL:https://api.flux.ai/v1/}
    timeout: 60000
  google:
    gemini:
      api-key: ${GOOGLE_GEMINI_API_KEY:your_google_api_key}
      api-url: ${GOOGLE_GEMINI_API_URL:https://generativelanguage.googleapis.com/v1beta/}
      model: ${GOOGLE_GEMINI_MODEL:gemini-2.0-flash}
      timeout: 60000

# Application Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
  
  pagination:
    default-page-size: 20
    max-page-size: 100
  
  file-upload:
    allowed-extensions: jpg,jpeg,png,gif,webp
    max-file-size: 10485760  # 10MB in bytes

# Logging Configuration
logging:
  level:
    com.textiletryon: INFO
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/textile-tryon.log

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
